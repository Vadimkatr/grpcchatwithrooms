// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/proto/service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Message struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	RoomId               string   `protobuf:"bytes,3,opt,name=roomId,proto3" json:"roomId,omitempty"`
	RoomName             string   `protobuf:"bytes,4,opt,name=roomName,proto3" json:"roomName,omitempty"`
	Content              string   `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Timestamp            string   `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Message) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Message) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Message) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *Message) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Message) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type Room struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{2}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateRoom struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	RoomName             string   `protobuf:"bytes,2,opt,name=roomName,proto3" json:"roomName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRoom) Reset()         { *m = CreateRoom{} }
func (m *CreateRoom) String() string { return proto.CompactTextString(m) }
func (*CreateRoom) ProtoMessage()    {}
func (*CreateRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{3}
}

func (m *CreateRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRoom.Unmarshal(m, b)
}
func (m *CreateRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRoom.Marshal(b, m, deterministic)
}
func (m *CreateRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoom.Merge(m, src)
}
func (m *CreateRoom) XXX_Size() int {
	return xxx_messageInfo_CreateRoom.Size(m)
}
func (m *CreateRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoom.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoom proto.InternalMessageInfo

func (m *CreateRoom) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateRoom) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

type Connect struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	RoomName             string   `protobuf:"bytes,3,opt,name=roomName,proto3" json:"roomName,omitempty"`
	Active               bool     `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connect) Reset()         { *m = Connect{} }
func (m *Connect) String() string { return proto.CompactTextString(m) }
func (*Connect) ProtoMessage()    {}
func (*Connect) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{4}
}

func (m *Connect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connect.Unmarshal(m, b)
}
func (m *Connect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connect.Marshal(b, m, deterministic)
}
func (m *Connect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connect.Merge(m, src)
}
func (m *Connect) XXX_Size() int {
	return xxx_messageInfo_Connect.Size(m)
}
func (m *Connect) XXX_DiscardUnknown() {
	xxx_messageInfo_Connect.DiscardUnknown(m)
}

var xxx_messageInfo_Connect proto.InternalMessageInfo

func (m *Connect) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Connect) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *Connect) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type Close struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Close) Reset()         { *m = Close{} }
func (m *Close) String() string { return proto.CompactTextString(m) }
func (*Close) ProtoMessage()    {}
func (*Close) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{5}
}

func (m *Close) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Close.Unmarshal(m, b)
}
func (m *Close) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Close.Marshal(b, m, deterministic)
}
func (m *Close) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Close.Merge(m, src)
}
func (m *Close) XXX_Size() int {
	return xxx_messageInfo_Close.Size(m)
}
func (m *Close) XXX_DiscardUnknown() {
	xxx_messageInfo_Close.DiscardUnknown(m)
}

var xxx_messageInfo_Close proto.InternalMessageInfo

type ListRoom struct {
	Rooms                []*Room  `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoom) Reset()         { *m = ListRoom{} }
func (m *ListRoom) String() string { return proto.CompactTextString(m) }
func (*ListRoom) ProtoMessage()    {}
func (*ListRoom) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{6}
}

func (m *ListRoom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoom.Unmarshal(m, b)
}
func (m *ListRoom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoom.Marshal(b, m, deterministic)
}
func (m *ListRoom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoom.Merge(m, src)
}
func (m *ListRoom) XXX_Size() int {
	return xxx_messageInfo_ListRoom.Size(m)
}
func (m *ListRoom) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoom.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoom proto.InternalMessageInfo

func (m *ListRoom) GetRooms() []*Room {
	if m != nil {
		return m.Rooms
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_3474577474948ca0, []int{7}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*User)(nil), "proto.User")
	proto.RegisterType((*Message)(nil), "proto.Message")
	proto.RegisterType((*Room)(nil), "proto.Room")
	proto.RegisterType((*CreateRoom)(nil), "proto.CreateRoom")
	proto.RegisterType((*Connect)(nil), "proto.Connect")
	proto.RegisterType((*Close)(nil), "proto.Close")
	proto.RegisterType((*ListRoom)(nil), "proto.ListRoom")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
}

func init() { proto.RegisterFile("internal/proto/service.proto", fileDescriptor_3474577474948ca0) }

var fileDescriptor_3474577474948ca0 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcd, 0x6a, 0xe3, 0x30,
	0x14, 0x85, 0xb1, 0xe3, 0x9f, 0xe4, 0x26, 0x93, 0x61, 0xc4, 0x10, 0x8c, 0x09, 0x4c, 0xc6, 0xab,
	0x61, 0x68, 0x93, 0x90, 0xf6, 0x05, 0x5a, 0x53, 0x4a, 0xa0, 0xcd, 0xc2, 0xa5, 0xdb, 0x82, 0x6a,
	0x5f, 0x5a, 0x83, 0x6d, 0x05, 0x49, 0x4d, 0xe9, 0x23, 0xf5, 0x75, 0xfa, 0x44, 0x45, 0x92, 0x95,
	0xbf, 0x55, 0xbb, 0x8a, 0x8e, 0x0e, 0xdf, 0xd5, 0x39, 0x37, 0x86, 0x71, 0xd9, 0x48, 0xe4, 0x0d,
	0xad, 0x66, 0x6b, 0xce, 0x24, 0x9b, 0x09, 0xe4, 0x9b, 0x32, 0xc7, 0xa9, 0x56, 0xc4, 0xd7, 0x3f,
	0xc9, 0x7f, 0xf0, 0xee, 0x05, 0x72, 0x32, 0x04, 0xb7, 0x2c, 0x22, 0x67, 0xe2, 0xfc, 0xeb, 0x65,
	0x6e, 0x59, 0x10, 0x02, 0x5e, 0x43, 0x6b, 0x8c, 0x5c, 0x7d, 0xa3, 0xcf, 0xc9, 0xbb, 0x03, 0xe1,
	0x2d, 0x0a, 0x41, 0x9f, 0x90, 0x8c, 0x20, 0x78, 0x11, 0xc8, 0x97, 0x96, 0x69, 0x15, 0x89, 0xa1,
	0xab, 0x4e, 0xab, 0x1d, 0xbb, 0xd5, 0x8a, 0xe1, 0x8c, 0xd5, 0xcb, 0x22, 0xea, 0x18, 0xc6, 0x28,
	0xc5, 0xa8, 0x93, 0x66, 0x3c, 0xc3, 0x58, 0x4d, 0x22, 0x08, 0x73, 0xd6, 0x48, 0x6c, 0x64, 0xe4,
	0x6b, 0xcb, 0x4a, 0x32, 0x86, 0x9e, 0x2c, 0x6b, 0x14, 0x92, 0xd6, 0xeb, 0x28, 0xd0, 0xde, 0xee,
	0x42, 0xf5, 0xca, 0x18, 0xab, 0xbf, 0xd4, 0x6b, 0x09, 0x90, 0x72, 0xa4, 0x12, 0x35, 0xf1, 0x07,
	0x3c, 0x95, 0x58, 0x33, 0xfd, 0x45, 0xdf, 0xac, 0x6b, 0xaa, 0x96, 0x94, 0x69, 0xe3, 0x20, 0xae,
	0x7b, 0x18, 0x37, 0x79, 0x80, 0x30, 0x65, 0x4d, 0x83, 0xb9, 0xfc, 0xde, 0x9c, 0xce, 0x51, 0xed,
	0x11, 0x04, 0x34, 0x97, 0xe5, 0xc6, 0x2c, 0xa4, 0x9b, 0xb5, 0x2a, 0x09, 0xc1, 0x4f, 0x2b, 0x26,
	0x30, 0x39, 0x85, 0xee, 0x4d, 0x29, 0xa4, 0x4e, 0xfc, 0x17, 0x7c, 0x05, 0x8a, 0xc8, 0x99, 0x74,
	0xf6, 0x9e, 0x52, 0x5e, 0x66, 0x1c, 0xc5, 0x5d, 0xd5, 0x6b, 0xf9, 0xb6, 0xf8, 0x70, 0xa0, 0x97,
	0x3e, 0x53, 0x0d, 0x0a, 0x32, 0x87, 0x81, 0x69, 0x7e, 0x27, 0x39, 0xd2, 0x9a, 0x0c, 0x5b, 0xb4,
	0xed, 0x10, 0x5b, 0xdd, 0xfe, 0xeb, 0x73, 0x87, 0xcc, 0xe0, 0x87, 0x21, 0x56, 0xf8, 0xaa, 0x1f,
	0xff, 0x65, 0x91, 0xed, 0x06, 0xe3, 0xfd, 0x00, 0xe4, 0x1c, 0x7e, 0x5f, 0x72, 0x46, 0x8b, 0x9c,
	0x9a, 0xb4, 0xf6, 0x03, 0x3a, 0x1a, 0x1d, 0x0f, 0xec, 0x1c, 0x55, 0x8f, 0x9c, 0x40, 0xff, 0x1a,
	0xe5, 0x45, 0x55, 0x99, 0x9c, 0xd6, 0xd4, 0x1d, 0xe2, 0x9f, 0xad, 0xb2, 0x0b, 0x78, 0x0c, 0xb4,
	0x3e, 0xfb, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x1d, 0xe6, 0x3c, 0xf2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatRoomsClient is the client API for ChatRooms service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatRoomsClient interface {
	CreateStream(ctx context.Context, in *Connect, opts ...grpc.CallOption) (ChatRooms_CreateStreamClient, error)
	CreateNewRoom(ctx context.Context, in *CreateRoom, opts ...grpc.CallOption) (*Room, error)
	BroadcastRoomMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Close, error)
	GetAllRooms(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListRoom, error)
}

type chatRoomsClient struct {
	cc *grpc.ClientConn
}

func NewChatRoomsClient(cc *grpc.ClientConn) ChatRoomsClient {
	return &chatRoomsClient{cc}
}

func (c *chatRoomsClient) CreateStream(ctx context.Context, in *Connect, opts ...grpc.CallOption) (ChatRooms_CreateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatRooms_serviceDesc.Streams[0], "/proto.ChatRooms/CreateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatRoomsCreateStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatRooms_CreateStreamClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type chatRoomsCreateStreamClient struct {
	grpc.ClientStream
}

func (x *chatRoomsCreateStreamClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatRoomsClient) CreateNewRoom(ctx context.Context, in *CreateRoom, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/proto.ChatRooms/CreateNewRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatRoomsClient) BroadcastRoomMessage(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Close, error) {
	out := new(Close)
	err := c.cc.Invoke(ctx, "/proto.ChatRooms/BroadcastRoomMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatRoomsClient) GetAllRooms(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ListRoom, error) {
	out := new(ListRoom)
	err := c.cc.Invoke(ctx, "/proto.ChatRooms/GetAllRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatRoomsServer is the server API for ChatRooms service.
type ChatRoomsServer interface {
	CreateStream(*Connect, ChatRooms_CreateStreamServer) error
	CreateNewRoom(context.Context, *CreateRoom) (*Room, error)
	BroadcastRoomMessage(context.Context, *Message) (*Close, error)
	GetAllRooms(context.Context, *Empty) (*ListRoom, error)
}

// UnimplementedChatRoomsServer can be embedded to have forward compatible implementations.
type UnimplementedChatRoomsServer struct {
}

func (*UnimplementedChatRoomsServer) CreateStream(req *Connect, srv ChatRooms_CreateStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateStream not implemented")
}
func (*UnimplementedChatRoomsServer) CreateNewRoom(ctx context.Context, req *CreateRoom) (*Room, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNewRoom not implemented")
}
func (*UnimplementedChatRoomsServer) BroadcastRoomMessage(ctx context.Context, req *Message) (*Close, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BroadcastRoomMessage not implemented")
}
func (*UnimplementedChatRoomsServer) GetAllRooms(ctx context.Context, req *Empty) (*ListRoom, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllRooms not implemented")
}

func RegisterChatRoomsServer(s *grpc.Server, srv ChatRoomsServer) {
	s.RegisterService(&_ChatRooms_serviceDesc, srv)
}

func _ChatRooms_CreateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Connect)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatRoomsServer).CreateStream(m, &chatRoomsCreateStreamServer{stream})
}

type ChatRooms_CreateStreamServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type chatRoomsCreateStreamServer struct {
	grpc.ServerStream
}

func (x *chatRoomsCreateStreamServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _ChatRooms_CreateNewRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatRoomsServer).CreateNewRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ChatRooms/CreateNewRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatRoomsServer).CreateNewRoom(ctx, req.(*CreateRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatRooms_BroadcastRoomMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatRoomsServer).BroadcastRoomMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ChatRooms/BroadcastRoomMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatRoomsServer).BroadcastRoomMessage(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatRooms_GetAllRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatRoomsServer).GetAllRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ChatRooms/GetAllRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatRoomsServer).GetAllRooms(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatRooms_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ChatRooms",
	HandlerType: (*ChatRoomsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNewRoom",
			Handler:    _ChatRooms_CreateNewRoom_Handler,
		},
		{
			MethodName: "BroadcastRoomMessage",
			Handler:    _ChatRooms_BroadcastRoomMessage_Handler,
		},
		{
			MethodName: "GetAllRooms",
			Handler:    _ChatRooms_GetAllRooms_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateStream",
			Handler:       _ChatRooms_CreateStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "internal/proto/service.proto",
}
